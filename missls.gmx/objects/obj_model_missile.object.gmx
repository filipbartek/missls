<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_missile</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_model</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize vertices

vertices = ds_list_create();

ds_list_add(vertices, array(0, -1)); // 0
//ds_list_add(vertices, array(2, 1));
//ds_list_add(vertices, array(4, 0));
//ds_list_add(vertices, array(2, -1));

// Add curve vertices
var complexity = 8;
for (var angle = 90; angle &gt; -90; angle -= 180 / complexity) {
    var pos_x = lengthdir_x(1, angle) * 2 + 2;
    var pos_y = lengthdir_y(1, angle);
    show_debug_message(string(pos_x) + " " + string(pos_y));
    ds_list_add(vertices, array(pos_x, pos_y));
}
ds_list_add(vertices, array(2, 1));

ds_list_add(vertices, array(0, 1));
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize edges

edges = ds_list_create();

for (var i = 0; i &lt; ds_list_size(vertices) - 1; i++) {
    ds_list_add(edges, array(i, i+1));
}
ds_list_add(edges, array(ds_list_size(vertices) - 1, 0));
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize scale

scale = 2;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize fixture

fixtures = ds_list_create();

var fix = physics_fixture_create();
physics_fixture_set_polygon_shape(fix);

model_fixture_add_point(fix, array(0, -1));
model_fixture_add_point(fix, array(2, -1));
model_fixture_add_point(fix, array(lengthdir_x(1, 45) * 2 + 2, lengthdir_y(1, 45)));
model_fixture_add_point(fix, array(4, 0));
model_fixture_add_point(fix, array(lengthdir_x(1, -45) * 2 + 2, lengthdir_y(1, -45)));
model_fixture_add_point(fix, array(2, 1));
model_fixture_add_point(fix, array(0, 1));

model_fixture_set_properties(fix);

ds_list_add(fixtures, array(fix, 0, 0));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
